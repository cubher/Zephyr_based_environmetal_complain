# 0 "F:/Workspace/smart_environmental/zephyrproject/zephyr/misc/empty_file.c"
# 0 "<built-in>"
# 0 "<command-line>"
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/nucleo_f103rb.dts" 1






/dts-v1/;
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f103Xb.dtsi" 1 3 4
# 10 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f103Xb.dtsi" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/common/mem.h" 1 3 4
# 11 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f103Xb.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f103X8.dtsi" 1 3 4







# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 1 3 4







# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/armv7-m.dtsi" 1 3 4


# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/common/skeleton.dtsi" 1 3 4
# 9 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/common/skeleton.dtsi" 3 4
/ {
 #address-cells = <1>;
 #size-cells = <1>;
 chosen { };
 aliases { };
};
# 4 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/armv7-m.dtsi" 2 3 4

/ {
 soc {
  #address-cells = <1>;
  #size-cells = <1>;
  compatible = "simple-bus";
  interrupt-parent = <&nvic>;
  ranges;

  nvic: interrupt-controller@e000e100 {
   #address-cells = <1>;
   compatible = "arm,v7m-nvic";
   reg = <0xe000e100 0xc00>;
   interrupt-controller;
   #interrupt-cells = <2>;
  };

  systick: timer@e000e010 {
   compatible = "arm,armv7m-systick";
   reg = <0xe000e010 0x10>;
  };
 };
};
# 9 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f1_clock.h" 1 3 4
# 9 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f1_clock.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32_common_clocks.h" 1 3 4
# 10 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/clock/stm32f1_clock.h" 2 3 4
# 10 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/i2c/i2c.h" 1 3 4
# 11 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/gpio/gpio.h" 1 3 4
# 12 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/pwm.h" 1 3 4
# 13 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/pwm/stm32_pwm.h" 1 3 4
# 14 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/dma/stm32_dma.h" 1 3 4
# 15 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32f1_adc.h" 1 3 4
# 9 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32f1_adc.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 1 3 4
# 9 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 1 3 4
# 9 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 1 3 4
# 19 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 1 3 4
# 34 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 1 3 4
# 18 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 1 3 4
# 1083 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_listify.h" 1 3 4
# 1084 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_loops.h" 2 3 4
# 19 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 162 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal_is_eq.h" 1 3 4
# 163 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 193 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_inc.h" 1 3 4
# 194 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_dec.h" 1 3 4
# 197 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4


# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal_util_x2.h" 1 3 4
# 200 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_internal.h" 2 3 4
# 35 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/sys/util_macro.h" 2 3 4
# 20 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/dt-util.h" 2 3 4
# 10 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/adc.h" 2 3 4
# 10 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32_adc.h" 2 3 4
# 10 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/adc/stm32f1_adc.h" 2 3 4
# 16 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f0_1_3_reset.h" 1 3 4
# 10 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f0_1_3_reset.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32-common.h" 1 3 4
# 11 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/reset/stm32f0_1_3_reset.h" 2 3 4
# 17 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4

# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/power/stm32_pwr.h" 1 3 4
# 19 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/common/freq.h" 1 3 4
# 20 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f1.dtsi" 2 3 4

/ {
 chosen {
  zephyr,flash-controller = &flash;
  zephyr,cortex-m-idle-timer = &rtc;
 };

 cpus {
  #address-cells = <1>;
  #size-cells = <0>;

  cpu0: cpu@0 {
   device_type = "cpu";
   compatible = "arm,cortex-m3";
   cpu-power-states = <&stop0 &stop1>;
   reg = <0>;
  };

  power-states {
   stop0: stop0 {
    compatible = "zephyr,power-state";
    power-state-name = "suspend-to-idle";
    substate-id = <0>;
    min-residency-us = <1000000>;
    exit-latency-us = <400>;
   };

   stop1: stop1 {
    compatible = "zephyr,power-state";
    power-state-name = "suspend-to-idle";
    substate-id = <1>;
    min-residency-us = <1000000>;
    exit-latency-us = <600>;
   };
  };
 };

 sram0: memory@20000000 {
  compatible = "mmio-sram";
 };

 clocks {
  clk_hse: clk-hse {
   #clock-cells = <0>;
   compatible = "st,stm32-hse-clock";
   status = "disabled";
  };

  clk_hsi: clk-hsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <(((8) * 1000) * 1000)>;
   status = "disabled";
  };

  clk_lse: clk-lse {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <32768>;
   status = "disabled";
  };

  clk_lsi: clk-lsi {
   #clock-cells = <0>;
   compatible = "fixed-clock";
   clock-frequency = <((40) * 1000)>;
   status = "disabled";
  };

  pll: pll {
   #clock-cells = <0>;
   compatible = "st,stm32f1-pll-clock";
   status = "disabled";
  };
 };

 mcos {
  mco1: mco1 {
   compatible = "st,stm32f1-clock-mco";
   status = "disabled";
  };
 };

 soc {

  flash: flash-controller@40022000 {
   compatible = "st,stm32-flash-controller", "st,stm32f1-flash-controller";
   reg = <0x40022000 0x400>;
   interrupts = <3 0>;
   clocks = <&rcc (0x014) (1 << 4)>;

   #address-cells = <1>;
   #size-cells = <1>;

   flash0: flash@8000000 {
    compatible = "st,stm32-nv-flash", "soc-nv-flash";

    write-block-size = <2>;

    max-erase-time = <40>;
   };
  };

  rcc: rcc@40021000 {
   compatible = "st,stm32f1-rcc";
   #clock-cells = <2>;
   reg = <0x40021000 0x400>;

   rctl: reset-controller {
    compatible = "st,stm32-rcc-rctl";
    #reset-cells = <1>;
   };
  };

  exti: interrupt-controller@40010400 {
   compatible = "st,stm32-exti";
   interrupt-controller;
   #interrupt-cells = <1>;
   #address-cells = <1>;
   reg = <0x40010400 0x400>;
   num-lines = <32>;
   interrupts = <6 0>, <7 0>, <8 0>, <9 0>,
         <10 0>, <23 0>, <40 0>;
   interrupt-names = "line0", "line1", "line2", "line3",
       "line4", "line5-9", "line10-15";
   line-ranges = <0 1>, <1 1>, <2 1>, <3 1>,
          <4 1>, <5 5>, <10 6>;
  };

  pinctrl: pin-controller@40010800 {
   compatible = "st,stm32f1-pinctrl";
   #address-cells = <1>;
   #size-cells = <1>;
   reg = <0x40010800 0x1C00>;

   gpioa: gpio@40010800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40010800 0x400>;
    clocks = <&rcc (0x018) (1 << 2)>;
   };

   gpiob: gpio@40010c00 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40010c00 0x400>;
    clocks = <&rcc (0x018) (1 << 3)>;
   };

   gpioc: gpio@40011000 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40011000 0x400>;
    clocks = <&rcc (0x018) (1 << 4)>;
   };

   gpiod: gpio@40011400 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40011400 0x400>;
    clocks = <&rcc (0x018) (1 << 5)>;
   };

   gpioe: gpio@40011800 {
    compatible = "st,stm32-gpio";
    gpio-controller;
    #gpio-cells = <2>;
    reg = <0x40011800 0x400>;
    clocks = <&rcc (0x018) (1 << 6)>;
   };
  };

  usart1: serial@40013800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40013800 0x400>;
   clocks = <&rcc (0x018) (1 << 14)>;
   resets = <&rctl (((0x0C) << 5U) | (14U))>;
   interrupts = <37 0>;
   status = "disabled";
  };

  usart2: serial@40004400 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004400 0x400>;
   clocks = <&rcc (0x01c) (1 << 17)>;
   resets = <&rctl (((0x10) << 5U) | (17U))>;
   interrupts = <38 0>;
   status = "disabled";
  };

  usart3: serial@40004800 {
   compatible = "st,stm32-usart", "st,stm32-uart";
   reg = <0x40004800 0x400>;
   clocks = <&rcc (0x01c) (1 << 18)>;
   resets = <&rctl (((0x10) << 5U) | (18U))>;
   interrupts = <39 0>;
   status = "disabled";
  };

  i2c1: i2c@40005400 {
   compatible = "st,stm32-i2c-v1";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005400 0x400>;
   clocks = <&rcc (0x01c) (1 << 21)>;
   interrupts = <31 0>, <32 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  i2c2: i2c@40005800 {
   compatible = "st,stm32-i2c-v1";
   clock-frequency = <100000>;
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40005800 0x400>;
   clocks = <&rcc (0x01c) (1 << 22)>;
   interrupts = <33 0>, <34 0>;
   interrupt-names = "event", "error";
   status = "disabled";
  };

  spi1: spi@40013000 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40013000 0x400>;
   clocks = <&rcc (0x018) (1 << 12)>;
   interrupts = <35 5>;
   status = "disabled";
  };

  iwdg: watchdog@40003000 {
   compatible = "st,stm32-watchdog";
   reg = <0x40003000 0x400>;
   status = "disabled";
  };

  wwdg: watchdog@40002c00 {
   compatible = "st,stm32-window-watchdog";
   reg = <0x40002C00 0x400>;
   clocks = <&rcc (0x01c) (1 << 11)>;
   interrupts = <0 7>;
   status = "disabled";
  };

  timers1: timers@40012c00 {
   compatible = "st,stm32-timers";
   reg = <0x40012c00 0x400>;
   clocks = <&rcc (0x018) (1 << 11)>,
     <&rcc ((((((0x003 + 1) + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x0C) << 5U) | (11U))>;
   interrupts = <24 0>, <25 0>, <26 0>, <27 0>;
   interrupt-names = "brk", "up", "trgcom", "cc";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };
  };

  timers2: timers@40000000 {
   compatible = "st,stm32-timers";
   reg = <0x40000000 0x400>;
   clocks = <&rcc (0x01c) (1 << 0)>,
     <&rcc (((((0x003 + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x10) << 5U) | (0U))>;
   interrupts = <28 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers3: timers@40000400 {
   compatible = "st,stm32-timers";
   reg = <0x40000400 0x400>;
   clocks = <&rcc (0x01c) (1 << 1)>,
     <&rcc (((((0x003 + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x10) << 5U) | (1U))>;
   interrupts = <29 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  timers4: timers@40000800 {
   compatible = "st,stm32-timers";
   reg = <0x40000800 0x400>;
   clocks = <&rcc (0x01c) (1 << 2)>,
     <&rcc (((((0x003 + 1) + 1) + 1) + 1) + 1) 0xFF>;
   resets = <&rctl (((0x10) << 5U) | (2U))>;
   interrupts = <30 0>;
   interrupt-names = "global";
   st,prescaler = <0>;
   status = "disabled";

   pwm {
    compatible = "st,stm32-pwm";
    status = "disabled";
    #pwm-cells = <3>;
   };

   counter {
    compatible = "st,stm32-counter";
    status = "disabled";
   };
  };

  rtc: rtc@40002800 {
   compatible = "st,stm32-rtc";
   reg = <0x40002800 0x400>;
   interrupts = <41 0>;
   clocks = <&rcc (0x01c) (1 << 28)>;
   prescaler = <32768>;
   status = "disabled";
  };

  adc1: adc@40012400 {
   compatible = "st,stm32f1-adc", "st,stm32-adc";
   reg = <0x40012400 0x400>;
   clocks = <&rcc (0x018) (1 << 9)>;
   interrupts = <18 0>;
   status = "disabled";
   #io-channel-cells = <1>;
   resolutions = <((((0xFF) & ((1UL << (8)) - 1UL)) << 0U) | (((0) & ((1UL << (5)) - 1UL)) << 8U) | (((0x00) & ((1UL << (3)) - 1UL)) << 13U) | (((0x00) & ((1UL << (3)) - 1UL)) << 16U) | (((12) & ((1UL << (13)) - 1UL)) << 19U))>;
   sampling-times = <2 8 14 29 42 56 72 240>;
   st,adc-sequencer = "FULLY_CONFIGURABLE";
   st,adc-oversampler = "OVERSAMPLER_NONE";
  };

  dma1: dma@40020000 {
   compatible = "st,stm32-dma-v2bis";
   #dma-cells = <2>;
   reg = <0x40020000 0x400>;
   clocks = <&rcc (0x014) (1 << 0)>;
   interrupts = <11 0 12 0 13 0 14 0 15 0 16 0 17 0>;
   status = "disabled";
  };
 };

 pwr: power@40007000 {
  compatible = "st,stm32-pwr";
  reg = <0x40007000 0x400>;
  status = "disabled";

  wkup-pins-nb = <1>;

  #address-cells = <1>;
  #size-cells = <0>;

  wkup-pin@1 {
   reg = <0x1>;
   wkup-gpios = <&gpioa 0 (1UL << (0))>;
  };
 };

 die_temp: dietemp {
  compatible = "st,stm32-temp";
  io-channels = <&adc1 16>;
  status = "disabled";
  avgslope = "4.3";
  v25 = <1430>;
  ntc;
 };

 smbus1: smbus1 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c1>;
  status = "disabled";
 };

 smbus2: smbus2 {
  compatible = "st,stm32-smbus";
  #address-cells = <1>;
  #size-cells = <0>;
  i2c = <&i2c2>;
  status = "disabled";
 };
};

&nvic {
 arm,num-irq-priority-bits = <4>;
};
# 9 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f103X8.dtsi" 2 3 4

/ {
 sram0: memory@20000000 {
  reg = <0x20000000 ((20) * 1024)>;
 };

 soc {
  compatible = "st,stm32f103", "st,stm32f1", "simple-bus";

  flash-controller@40022000 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((64) * 1024)>;
    erase-block-size = <((1) * 1024)>;
   };
  };




  spi2: spi@40003800 {
   compatible = "st,stm32-spi";
   #address-cells = <1>;
   #size-cells = <0>;
   reg = <0x40003800 0x400>;
   clocks = <&rcc (0x01c) (1 << 14)>;
   interrupts = <36 5>;
   status = "disabled";
  };

  usb: usb@40005c00 {
   compatible = "st,stm32-usb";
   reg = <0x40005c00 0x400>;
   interrupts = <20 0>;
   interrupt-names = "usb";
   num-bidir-endpoints = <8>;
   ram-size = <512>;
   maximum-speed = "full-speed";
   status = "disabled";
   clocks = <&rcc (0x01c) (1 << 23)>;
   phys = <&usb_fs_phy>;
  };

  can1: can@40006400 {
   compatible = "st,stm32-bxcan";
   reg = <0x40006400 0x400>;
   interrupts = <19 0>, <20 0>, <21 0>, <22 0>;
   interrupt-names = "TX", "RX0", "RX1", "SCE";
   clocks = <&rcc (0x01c) (1 << 25)>;
   status = "disabled";
  };
 };

 usb_fs_phy: usbphy {
  compatible = "usb-nop-xceiv";
  #phy-cells = <0>;
 };
};
# 12 "F:/Workspace/smart_environmental/zephyrproject/zephyr/dts/arm/st/f1/stm32f103Xb.dtsi" 2 3 4

/ {
 soc {
  flash-controller@40022000 {
   flash0: flash@8000000 {
    reg = <0x08000000 ((128) * 1024)>;
    erase-block-size = <((1) * 1024)>;
   };
  };




 };

};
# 9 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/nucleo_f103rb.dts" 2
# 1 "F:/Workspace/smart_environmental/zephyrproject/modules/hal/stm32/dts/st/f1/stm32f103r(8-b)tx-pinctrl.dtsi" 1 3 4






# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32f1-pinctrl.h" 1 3 4
# 10 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32f1-pinctrl.h" 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32-pinctrl-common.h" 1 3 4
# 11 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32f1-pinctrl.h" 2 3 4
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32f1-afio.h" 1 3 4
# 12 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/pinctrl/stm32f1-pinctrl.h" 2 3 4
# 8 "F:/Workspace/smart_environmental/zephyrproject/modules/hal/stm32/dts/st/f1/stm32f103r(8-b)tx-pinctrl.dtsi" 2 3 4

/ {
 soc {
  pinctrl: pin-controller@40010800 {



   /omit-if-no-ref/ adc1_in0_pa0: adc1_in0_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in1_pa1: adc1_in1_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in2_pa2: adc1_in2_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in3_pa3: adc1_in3_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in4_pa4: adc1_in4_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in5_pa5: adc1_in5_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in6_pa6: adc1_in6_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in7_pa7: adc1_in7_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in8_pb0: adc1_in8_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in9_pb1: adc1_in9_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in10_pc0: adc1_in10_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in11_pc1: adc1_in11_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in12_pc2: adc1_in12_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in13_pc3: adc1_in13_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in14_pc4: adc1_in14_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc1_in15_pc5: adc1_in15_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in0_pa0: adc2_in0_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in1_pa1: adc2_in1_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in2_pa2: adc2_in2_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in3_pa3: adc2_in3_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in4_pa4: adc2_in4_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in5_pa5: adc2_in5_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in6_pa6: adc2_in6_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in7_pa7: adc2_in7_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in8_pb0: adc2_in8_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in9_pb1: adc2_in9_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in10_pc0: adc2_in10_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in11_pc1: adc2_in11_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in12_pc2: adc2_in12_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in13_pc3: adc2_in13_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in14_pc4: adc2_in14_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ adc2_in15_pc5: adc2_in15_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ analog_pa0: analog_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa1: analog_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa2: analog_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa3: analog_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa4: analog_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa5: analog_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa6: analog_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa7: analog_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa8: analog_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa9: analog_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa10: analog_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa11: analog_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa12: analog_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa13: analog_pa13 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa14: analog_pa14 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pa15: analog_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb0: analog_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb1: analog_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb2: analog_pb2 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb3: analog_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb4: analog_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb5: analog_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb6: analog_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb7: analog_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb8: analog_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb9: analog_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb10: analog_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb11: analog_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb12: analog_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb13: analog_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb14: analog_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pb15: analog_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc0: analog_pc0 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc1: analog_pc1 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc2: analog_pc2 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc3: analog_pc3 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc4: analog_pc4 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc5: analog_pc5 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc6: analog_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc7: analog_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc8: analog_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc9: analog_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc10: analog_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc11: analog_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc12: analog_pc12 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc13: analog_pc13 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc14: analog_pc14 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pc15: analog_pc15 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pd0: analog_pd0 {
    pinmux = <((((('D') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pd1: analog_pd1 {
    pinmux = <((((('D') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ analog_pd2: analog_pd2 {
    pinmux = <((((('D') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x2) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ can_rx_pa11: can_rx_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((13U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ can_rx_remap1_pb8: can_rx_remap1_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((13U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ can_tx_pa12: can_tx_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((13U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ can_tx_remap1_pb9: can_tx_remap1_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((13U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ i2c1_scl_pb6: i2c1_scl_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((1U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_scl_remap1_pb8: i2c1_scl_remap1_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((1U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_scl_pb10: i2c2_scl_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_sda_pb7: i2c1_sda_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((1U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c1_sda_remap1_pb9: i2c1_sda_remap1_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((1U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    drive-open-drain;
   };

   /omit-if-no-ref/ i2c2_sda_pb11: i2c2_sda_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
    drive-open-drain;
   };



   /omit-if-no-ref/ i2c1_smba_pb5: i2c1_smba_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ i2c2_smba_pb12: i2c2_smba_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ sys_jtms_swdio_pa13: sys_jtms_swdio_pa13 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ sys_jtck_swclk_pa14: sys_jtck_swclk_pa14 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ sys_jtdi_pa15: sys_jtdi_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ sys_jtdo_traceswo_pb3: sys_jtdo_traceswo_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ rcc_mco_pa8: rcc_mco_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ spi1_miso_master_pa6: spi1_miso_master_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi1_miso_remap1_master_pb4: spi1_miso_remap1_master_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    bias-pull-down;
   };

   /omit-if-no-ref/ spi2_miso_master_pb14: spi2_miso_master_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
    bias-pull-down;
   };



   /omit-if-no-ref/ spi1_mosi_master_pa7: spi1_mosi_master_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi1_mosi_remap1_master_pb5: spi1_mosi_remap1_master_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi2_mosi_master_pb15: spi2_mosi_master_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ spi1_nss_master_pa4: spi1_nss_master_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi1_nss_remap1_master_pa15: spi1_nss_remap1_master_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi2_nss_master_pb12: spi2_nss_master_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ spi1_sck_master_pa5: spi1_sck_master_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi1_sck_remap1_master_pb3: spi1_sck_remap1_master_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi2_sck_master_pb13: spi2_sck_master_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ spi1_miso_slave_pa6: spi1_miso_slave_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi1_miso_remap1_slave_pb4: spi1_miso_remap1_slave_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi2_miso_slave_pb14: spi2_miso_slave_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ spi1_mosi_slave_pa7: spi1_mosi_slave_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi1_mosi_remap1_slave_pb5: spi1_mosi_remap1_slave_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi2_mosi_slave_pb15: spi2_mosi_slave_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ spi1_nss_slave_pa4: spi1_nss_slave_pa4 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi1_nss_remap1_slave_pa15: spi1_nss_remap1_slave_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    bias-pull-up;
   };

   /omit-if-no-ref/ spi2_nss_slave_pb12: spi2_nss_slave_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
    bias-pull-up;
   };



   /omit-if-no-ref/ spi1_sck_slave_pa5: spi1_sck_slave_pa5 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi1_sck_remap1_slave_pb3: spi1_sck_remap1_slave_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((0U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ spi2_sck_slave_pb13: spi2_sck_slave_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ tim1_bkin_remap1_pa6: tim1_bkin_remap1_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_bkin_pb12: tim1_bkin_pb12 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ tim1_ch1n_remap1_pwm_in_pa7: tim1_ch1n_remap1_pwm_in_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pwm_in_pa8: tim1_ch1_pwm_in_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch1_remap1_pwm_in_pa8: tim1_ch1_remap1_pwm_in_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pwm_in_pa9: tim1_ch2_pwm_in_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch2_remap1_pwm_in_pa9: tim1_ch2_remap1_pwm_in_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pwm_in_pa10: tim1_ch3_pwm_in_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch3_remap1_pwm_in_pa10: tim1_ch3_remap1_pwm_in_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pwm_in_pa11: tim1_ch4_pwm_in_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch4_remap1_pwm_in_pa11: tim1_ch4_remap1_pwm_in_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_remap1_pwm_in_pb0: tim1_ch2n_remap1_pwm_in_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_remap1_pwm_in_pb1: tim1_ch3n_remap1_pwm_in_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pwm_in_pb13: tim1_ch1n_pwm_in_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pwm_in_pb14: tim1_ch2n_pwm_in_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pwm_in_pb15: tim1_ch3n_pwm_in_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pwm_in_pa0: tim2_ch1_pwm_in_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch1_remap2_pwm_in_pa0: tim2_ch1_remap2_pwm_in_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pwm_in_pa1: tim2_ch2_pwm_in_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch2_remap2_pwm_in_pa1: tim2_ch2_remap2_pwm_in_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pwm_in_pa2: tim2_ch3_pwm_in_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch3_remap1_pwm_in_pa2: tim2_ch3_remap1_pwm_in_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pwm_in_pa3: tim2_ch4_pwm_in_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch4_remap1_pwm_in_pa3: tim2_ch4_remap1_pwm_in_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch1_remap1_pwm_in_pa15: tim2_ch1_remap1_pwm_in_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch1_remap3_pwm_in_pa15: tim2_ch1_remap3_pwm_in_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((3U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch2_remap1_pwm_in_pb3: tim2_ch2_remap1_pwm_in_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch2_remap3_pwm_in_pb3: tim2_ch2_remap3_pwm_in_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((3U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch3_remap2_pwm_in_pb10: tim2_ch3_remap2_pwm_in_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch3_remap3_pwm_in_pb10: tim2_ch3_remap3_pwm_in_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((3U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch4_remap2_pwm_in_pb11: tim2_ch4_remap2_pwm_in_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch4_remap3_pwm_in_pb11: tim2_ch4_remap3_pwm_in_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((3U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pwm_in_pa6: tim3_ch1_pwm_in_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pwm_in_pa7: tim3_ch2_pwm_in_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pwm_in_pb0: tim3_ch3_pwm_in_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch3_remap1_pwm_in_pb0: tim3_ch3_remap1_pwm_in_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pwm_in_pb1: tim3_ch4_pwm_in_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch4_remap1_pwm_in_pb1: tim3_ch4_remap1_pwm_in_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch1_remap1_pwm_in_pb4: tim3_ch1_remap1_pwm_in_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch2_remap1_pwm_in_pb5: tim3_ch2_remap1_pwm_in_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch1_remap2_pwm_in_pc6: tim3_ch1_remap2_pwm_in_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch2_remap2_pwm_in_pc7: tim3_ch2_remap2_pwm_in_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch3_remap2_pwm_in_pc8: tim3_ch3_remap2_pwm_in_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch4_remap2_pwm_in_pc9: tim3_ch4_remap2_pwm_in_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pwm_in_pb6: tim4_ch1_pwm_in_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((12U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pwm_in_pb7: tim4_ch2_pwm_in_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((12U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pwm_in_pb8: tim4_ch3_pwm_in_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((12U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pwm_in_pb9: tim4_ch4_pwm_in_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((12U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ tim1_ch1n_remap1_pwm_out_pa7: tim1_ch1n_remap1_pwm_out_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch1_pwm_out_pa8: tim1_ch1_pwm_out_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch1_remap1_pwm_out_pa8: tim1_ch1_remap1_pwm_out_pa8 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch2_pwm_out_pa9: tim1_ch2_pwm_out_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch2_remap1_pwm_out_pa9: tim1_ch2_remap1_pwm_out_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch3_pwm_out_pa10: tim1_ch3_pwm_out_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch3_remap1_pwm_out_pa10: tim1_ch3_remap1_pwm_out_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch4_pwm_out_pa11: tim1_ch4_pwm_out_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch4_remap1_pwm_out_pa11: tim1_ch4_remap1_pwm_out_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_remap1_pwm_out_pb0: tim1_ch2n_remap1_pwm_out_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_remap1_pwm_out_pb1: tim1_ch3n_remap1_pwm_out_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch1n_pwm_out_pb13: tim1_ch1n_pwm_out_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch2n_pwm_out_pb14: tim1_ch2n_pwm_out_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim1_ch3n_pwm_out_pb15: tim1_ch3n_pwm_out_pb15 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((6U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch1_pwm_out_pa0: tim2_ch1_pwm_out_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch1_remap2_pwm_out_pa0: tim2_ch1_remap2_pwm_out_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch2_pwm_out_pa1: tim2_ch2_pwm_out_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch2_remap2_pwm_out_pa1: tim2_ch2_remap2_pwm_out_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch3_pwm_out_pa2: tim2_ch3_pwm_out_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch3_remap1_pwm_out_pa2: tim2_ch3_remap1_pwm_out_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch4_pwm_out_pa3: tim2_ch4_pwm_out_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch4_remap1_pwm_out_pa3: tim2_ch4_remap1_pwm_out_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch1_remap1_pwm_out_pa15: tim2_ch1_remap1_pwm_out_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch1_remap3_pwm_out_pa15: tim2_ch1_remap3_pwm_out_pa15 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((15) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((3U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch2_remap1_pwm_out_pb3: tim2_ch2_remap1_pwm_out_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch2_remap3_pwm_out_pb3: tim2_ch2_remap3_pwm_out_pb3 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((3U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch3_remap2_pwm_out_pb10: tim2_ch3_remap2_pwm_out_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch3_remap3_pwm_out_pb10: tim2_ch3_remap3_pwm_out_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((3U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch4_remap2_pwm_out_pb11: tim2_ch4_remap2_pwm_out_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim2_ch4_remap3_pwm_out_pb11: tim2_ch4_remap3_pwm_out_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((8U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((3U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch1_pwm_out_pa6: tim3_ch1_pwm_out_pa6 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch2_pwm_out_pa7: tim3_ch2_pwm_out_pa7 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch3_pwm_out_pb0: tim3_ch3_pwm_out_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch3_remap1_pwm_out_pb0: tim3_ch3_remap1_pwm_out_pb0 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch4_pwm_out_pb1: tim3_ch4_pwm_out_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch4_remap1_pwm_out_pb1: tim3_ch4_remap1_pwm_out_pb1 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch1_remap1_pwm_out_pb4: tim3_ch1_remap1_pwm_out_pb4 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((4) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch2_remap1_pwm_out_pb5: tim3_ch2_remap1_pwm_out_pb5 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((5) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch1_remap2_pwm_out_pc6: tim3_ch1_remap2_pwm_out_pc6 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch2_remap2_pwm_out_pc7: tim3_ch2_remap2_pwm_out_pc7 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch3_remap2_pwm_out_pc8: tim3_ch3_remap2_pwm_out_pc8 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim3_ch4_remap2_pwm_out_pc9: tim3_ch4_remap2_pwm_out_pc9 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((10U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((2U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim4_ch1_pwm_out_pb6: tim4_ch1_pwm_out_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((12U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim4_ch2_pwm_out_pb7: tim4_ch2_pwm_out_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((12U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim4_ch3_pwm_out_pb8: tim4_ch3_pwm_out_pb8 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((8) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((12U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ tim4_ch4_pwm_out_pb9: tim4_ch4_pwm_out_pb9 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((12U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ usart1_cts_pa11: usart1_cts_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart2_cts_pa0: usart2_cts_pa0 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((0) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((3U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_cts_pb13: usart3_cts_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((4U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    bias-pull-up;
    drive-open-drain;
   };

   /omit-if-no-ref/ usart3_cts_remap1_pb13: usart3_cts_remap1_pb13 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((13) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((4U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
    bias-pull-up;
    drive-open-drain;
   };



   /omit-if-no-ref/ usart1_rts_pa12: usart1_rts_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart2_rts_pa1: usart2_rts_pa1 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((1) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((3U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart3_rts_pb14: usart3_rts_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((4U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart3_rts_remap1_pb14: usart3_rts_remap1_pb14 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((14) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((4U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ usart1_rx_pa10: usart1_rx_pa10 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((2U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart1_rx_remap1_pb7: usart1_rx_remap1_pb7 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((7) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((2U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart2_rx_pa3: usart2_rx_pa3 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((3) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((3U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart3_rx_pb11: usart3_rx_pb11 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((4U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart3_rx_remap1_pc11: usart3_rx_remap1_pc11 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((4U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ usart1_tx_pa9: usart1_tx_pa9 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((9) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((2U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart1_tx_remap1_pb6: usart1_tx_remap1_pb6 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((6) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((2U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart2_tx_pa2: usart2_tx_pa2 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((2) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((3U) & 0x1FU) << 1U) | (((0x1U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart3_tx_pb10: usart3_tx_pb10 {
    pinmux = <((((('B') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((4U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((0U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usart3_tx_remap1_pc10: usart3_tx_remap1_pc10 {
    pinmux = <((((('C') - 'A') & 0xFU) << 6U) | (((10) & 0xFU) << 2U) | (((0x0) & 0x3U) << 0U) | (((((((0U) & 0x1U) << 0U) | (((4U) & 0x1FU) << 1U) | (((0x3U) & 0x3U) << 6U) | (((1U) & 0x3U) << 8U))) & 0x3FFU) << 10U))>;
   };



   /omit-if-no-ref/ usb_dm_pa11: usb_dm_pa11 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((11) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

   /omit-if-no-ref/ usb_dp_pa12: usb_dp_pa12 {
    pinmux = <((((('A') - 'A') & 0xFU) << 6U) | (((12) & 0xFU) << 2U) | (((0x1) & 0x3U) << 0U) | (((0) & 0x3FFU) << 10U))>;
   };

  };
 };
};
# 10 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/nucleo_f103rb.dts" 2
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/arduino_r3_connector.dtsi" 1






# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/gpio/arduino-header-r3.h" 1 3 4
# 8 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/arduino_r3_connector.dtsi" 2

/ {
 arduino_header: connector {
  compatible = "arduino-header-r3";
  #gpio-cells = <2>;
  gpio-map-mask = <0xffffffff 0xffffffc0>;
  gpio-map-pass-thru = <0 0x3f>;
  gpio-map = <0 0 &gpioa 0 0>,
      <1 0 &gpioa 1 0>,
      <2 0 &gpioa 4 0>,
      <3 0 &gpiob 0 0>,
      <4 0 &gpioc 1 0>,
      <5 0 &gpioc 0 0>,
      <6 0 &gpioa 3 0>,
      <7 0 &gpioa 2 0>,
      <8 0 &gpioa 10 0>,
      <9 0 &gpiob 3 0>,
      <10 0 &gpiob 5 0>,
      <11 0 &gpiob 4 0>,
      <12 0 &gpiob 10 0>,
      <13 0 &gpioa 8 0>,
      <14 0 &gpioa 9 0>,
      <15 0 &gpioc 7 0>,
      <16 0 &gpiob 6 0>,
      <17 0 &gpioa 7 0>,
      <18 0 &gpioa 6 0>,
      <19 0 &gpioa 5 0>,
      <20 0 &gpiob 9 0>,
      <21 0 &gpiob 8 0>;
 };
};

arduino_spi: &spi1 {};
arduino_i2c: &i2c1 {};
# 11 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/nucleo_f103rb.dts" 2
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/st_morpho_connector.dtsi" 1






# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/gpio/st-morpho-header.h" 1 3 4
# 8 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/st_morpho_connector.dtsi" 2

/ {
 st_morpho_header: st-morpho-header {
  compatible = "st-morpho-header";
  #gpio-cells = <2>;
  gpio-map-mask = <0xFF 0x0>;
  gpio-map-pass-thru = <0x0 0x7F>;
  gpio-map = <0 0 &gpioc 10 0>,
      <1 0 &gpioc 11 0>,
      <2 0 &gpioc 12 0>,
      <3 0 &gpiod 2 0>,
      <12 0 &gpioa 13 0>,
      <14 0 &gpioa 14 0>,
      <16 0 &gpioa 15 0>,
      <20 0 &gpiob 7 0>,
      <22 0 &gpioc 13 0>,
      <24 0 &gpioc 14 0>,
      <26 0 &gpioc 15 0>,
      <27 0 &gpioa 0 0>,
      <28 0 &gpiod 0 0>,
      <29 0 &gpioa 1 0>,
      <30 0 &gpiod 1 0>,
      <31 0 &gpioa 4 0>,
      <33 0 &gpiob 0 0>,
      <34 0 &gpioc 2 0>,
      <35 0 &gpioc 1 0>,
      <36 0 &gpioc 3 0>,
      <37 0 &gpioc 0 0>,
      <72 0 &gpioc 9 0>,
      <73 0 &gpioc 8 0>,
      <74 0 &gpiob 8 0>,
      <75 0 &gpioc 6 0>,
      <76 0 &gpiob 9 0>,
      <77 0 &gpioc 5 0>,
      <82 0 &gpioa 5 0>,
      <83 0 &gpioa 12 0>,
      <84 0 &gpioa 6 0>,
      <85 0 &gpioa 11 0>,
      <86 0 &gpioa 7 0>,
      <87 0 &gpiob 12 0>,
      <88 0 &gpiob 6 0>,
      <89 0 &gpiob 11 0>,
      <90 0 &gpioc 7 0>,
      <92 0 &gpioa 9 0>,
      <93 0 &gpiob 2 0>,
      <94 0 &gpioa 8 0>,
      <95 0 &gpiob 1 0>,
      <96 0 &gpiob 10 0>,
      <97 0 &gpiob 15 0>,
      <98 0 &gpiob 4 0>,
      <99 0 &gpiob 14 0>,
      <100 0 &gpiob 5 0>,
      <101 0 &gpiob 13 0>,
      <102 0 &gpiob 3 0>,
      <104 0 &gpioa 10 0>,
      <105 0 &gpioc 4 0>,
      <106 0 &gpioa 2 0>,
      <108 0 &gpioa 3 0>;
 };
};
# 12 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/nucleo_f103rb.dts" 2
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/include/zephyr/dt-bindings/input/input-event-codes.h" 1 3 4
# 13 "F:/Workspace/smart_environmental/zephyrproject/zephyr/boards/st/nucleo_f103rb/nucleo_f103rb.dts" 2

/ {
 model = "STMicroelectronics STM32F103RB-NUCLEO board";
 compatible = "st,stm32f103rb-nucleo";

 chosen {
  zephyr,console = &usart2;
  zephyr,shell-uart = &usart2;
  zephyr,sram = &sram0;
  zephyr,flash = &flash0;
 };

 leds: leds {
  compatible = "gpio-leds";

  green_led_2: led_2 {
   gpios = <&gpioa 5 (0 << 0)>;
   label = "User LD2";
  };
 };

 gpio_keys {
  compatible = "gpio-keys";

  user_button: button {
   label = "User";
   gpios = <&gpioc 13 (1 << 0)>;
   zephyr,code = <11>;
  };
 };

 aliases {
  led0 = &green_led_2;
  sw0 = &user_button;
  watchdog0 = &iwdg;
  die-temp0 = &die_temp;
 };
};

&clk_lsi {
 status = "okay";
};

&clk_hse {
 hse-bypass;
 clock-frequency = <(((8) * 1000) * 1000)>;
 status = "okay";
};

&pll {
 mul = <9>;
 clocks = <&clk_hse>;
 status = "okay";
};

&rcc {
 clocks = <&pll>;
 clock-frequency = <(((72) * 1000) * 1000)>;
 ahb-prescaler = <1>;
 apb1-prescaler = <2>;
 apb2-prescaler = <1>;
 adc-prescaler = <2>;
};

&usart1 {
 pinctrl-0 = <&usart1_tx_pa9 &usart1_rx_pa10>;
 pinctrl-names = "default";
 current-speed = <115200>;
 status = "okay";
};

&usart2 {
 pinctrl-0 = <&usart2_tx_pa2 &usart2_rx_pa3>;
 pinctrl-names = "default";
 current-speed = <115200>;
 status = "okay";
};

&usart3 {
 pinctrl-0 = <&usart3_tx_pb10 &usart3_rx_pb11>;
 pinctrl-names = "default";
 current-speed = <115200>;
};

&i2c1 {
 pinctrl-0 = <&i2c1_scl_remap1_pb8 &i2c1_sda_remap1_pb9>;
 pinctrl-names = "default";
 status = "okay";
 clock-frequency = <400000>;
};

&spi1 {
 pinctrl-0 = <&spi1_sck_master_pa5 &spi1_miso_master_pa6 &spi1_mosi_master_pa7>;
 pinctrl-names = "default";
 cs-gpios = <&gpiob 6 ((1 << 0) | (1 << 4))>;
 status = "okay";
};

&spi2 {
 pinctrl-0 = <&spi2_nss_master_pb12 &spi2_sck_master_pb13
       &spi2_miso_master_pb14 &spi2_mosi_master_pb15>;
 pinctrl-names = "default";
 status = "okay";
};

&timers1 {
 st,prescaler = <10000>;
 status = "okay";

 pwm1: pwm {
  status = "okay";
  pinctrl-0 = <&tim1_ch1_pwm_out_pa8>;
  pinctrl-names = "default";
 };
};

&timers2 {
 st,prescaler = <255>;
 status = "okay";

 pwm2: pwm {
  status = "okay";
  pinctrl-0 = <&tim2_ch2_pwm_in_pa1>;
  pinctrl-names = "default";
 };
};

&iwdg {
 status = "okay";
};

&rtc {
 clocks = <&rcc (0x01c) (1 << 28)>,
   <&rcc 0x003 ((((0x20) & 0xFFFFU) << 0U) | (((8) & 0x3FU) << 16U) | (((3) & 0x1FU) << 22U) | ((((2)) & 0x1FU) << 27U))>;
 status = "okay";
};

&adc1 {
 pinctrl-0 = <&adc1_in0_pa0>;
 pinctrl-names = "default";
 status = "okay";
};

&die_temp {
 status = "okay";
};

&dma1 {
 status = "okay";
};

&flash0 {
 partitions {
  compatible = "fixed-partitions";
  #address-cells = <1>;
  #size-cells = <1>;


  storage_partition: partition@1f800 {
   label = "storage";
   reg = <0x0001f800 ((2) * 1024)>;
  };
 };
};
# 0 "<command-line>" 2
# 1 "./app.overlay" 1

&adc1 {
    pinctrl-0 = <&adc1_in0_pa0 &adc1_in4_pa4>;
    pinctrl-names = "default";
    status = "okay";
};
# 0 "<command-line>" 2
# 1 "F:/Workspace/smart_environmental/zephyrproject/zephyr/misc/empty_file.c"
